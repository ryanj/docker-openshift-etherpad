apiVersion: v1
kind: Template
metadata:
  name: etherpad
  annotations:
    "openshift.io/display-name": Etherpad
    description: |
      A realtime collaborative editor
parameters:
- name: NAME
  description: Name of the DC, service, route
  required: true
  value: etherpad
- name: ADMIN_PASSWORD
  description: Admin password for etherpad/admin
  value: etherpad
  required: true
- name: DB_DBID
  value: etherpad
  description: Database Name
  required: true
- name: DB_HOST
  description: Database host
  value: localhost
  required: true
- name: DB_USER
  description: Database User ID
  value: etherpad
  required: true
- name: DB_TYPE
  description: Database Password
  value: postgres
  required: true
- name: DB_PASS
  description: Database Password
  value: etherpad
  required: true
- name: DB_PORT
  description: Database Port
  value: "5432"
  required: true
- name: ETHERPAD_IMAGE
  description: Etherpad Image to be used
  value: "quay.io/wkulhanek/etherpad:latest"
  required: true
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${NAME}
          deploymentconfig: ${NAME}
      spec:
        containers:
        - env:
          - name: DB_DBID
            value: ${DB_DBID}
          - name: DB_HOST
            value: ${DB_HOST}
          - name: DB_PASS
            value: ${DB_PASS}
          - name: DB_PORT
            value: ${DB_PORT}
          - name: DB_TYPE
            value: ${DB_TYPE}
          - name: DB_USER
            value: ${DB_USER}
          - name: NODE_ENV
            value: production
          image: ${ETHERPAD_IMAGE}
          imagePullPolicy: Always
          name: ${NAME}
          ports:
          - containerPort: 9001
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 9001
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9001
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
          - mountPath: /opt/etherpad/config
            name: ${NAME}-settings
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: ${NAME}-settings
          name: ${NAME}-settings

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    ports:
    - name: ${NAME}
      port: 9001
      protocol: TCP
      targetPort: 9001
    selector:
      app: ${NAME}
      deploymentconfig: ${NAME}

- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${NAME}
    name: ${NAME}
  spec:
    to:
      name: ${NAME}

- apiVersion: v1
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: ${NAME}-settings
    labels:
      app: ${NAME}
  data:
    settings.json: |
      /*
        This file must be valid JSON. But comments are allowed

        Please edit settings.json, not settings.json.template
      */
      {
        // Name your instance!
        "title": "OpenTLC Etherpad",

        // favicon default name
        // alternatively, set up a fully specified Url to your own favicon
        "favicon": "favicon.ico",

        //IP and port which etherpad should bind at
        "ip": "0.0.0.0",
        "port" : 9001,

        /*
        // Node native SSL support
        // this is disabled by default
        //
        // make sure to have the minimum and correct file access permissions set
        // so that the Etherpad server can access them

        "ssl" : {
                  "key"  : "/path-to-your/epl-server.key",
                  "cert" : "/path-to-your/epl-server.crt",
                  "ca": ["/path-to-your/epl-intermediate-cert1.crt", "/path-to-your/epl-intermediate-cert2.crt"]
                },

        */

        /*
        //The Type of the database. You can choose between dirty, postgres, sqlite and mysql
        //You shouldn't use "dirty" for for anything else than testing or development
        "dbType" : "dirty",
        //the database specific settings
        "dbSettings" : {
                         "filename" : "var/dirty.db"
                       },
        /*

        /* An Example of MySQL Configuration
         "dbType" : "mysql",
         "dbSettings" : {
                          "user"    : "root",
                          "host"    : "localhost",
                          "password": "",
                          "database": "store"
                        },
        */

         "dbType" : "${DB_TYPE}",
         "dbSettings" : {
                          "user"    : "${DB_USER}",
                          "host"    : "${DB_HOST}",
                          "port"    : "${DB_PORT}",
                          "password": "${DB_PASS}",
                          "database": "${DB_DBID}"
                        },

        //the default text of a pad
        "defaultPadText" : "Welcome to Etherpad!\n\nThis pad text is synchronized as you type, so that everyone viewing this page sees the same text. This allows you to collaborate seamlessly on documents!\n\nGet involved with Etherpad at http:\/\/etherpad.org\n",

        /* Default Pad behavior, users can override by changing */
        "padOptions": {
          "noColors": false,
          "showControls": true,
          "showChat": true,
          "showLineNumbers": true,
          "useMonospaceFont": false,
          "userName": false,
          "userColor": false,
          "rtl": false,
          "alwaysShowChat": false,
          "chatAndUsers": false,
          "lang": "en-gb"
        },

        /* Shoud we suppress errors from being visible in the default Pad Text? */
        "suppressErrorsInPadText" : false,

        /* Users must have a session to access pads. This effectively allows only group pads to be accessed. */
        "requireSession" : false,

        /* Users may edit pads but not create new ones. Pad creation is only via the API. This applies both to group pads and regular pads. */
        "editOnly" : false,

        /* Users, who have a valid session, automatically get granted access to password protected pads */
        "sessionNoPassword" : false,

        /* if true, all css & js will be minified before sending to the client. This will improve the loading performance massivly,
           but makes it impossible to debug the javascript/css */
        "minify" : true,

        /* How long may clients use served javascript code (in seconds)? Without versioning this
           may cause problems during deployment. Set to 0 to disable caching */
        "maxAge" : 21600, // 60 * 60 * 6 = 6 hours

        /* This is the path to the Abiword executable. Setting it to null, disables abiword.
           Abiword is needed to advanced import/export features of pads*/
        "abiword" : null,

        /* This is the path to the Tidy executable. Setting it to null, disables Tidy.
           Tidy is used to improve the quality of exported pads*/
        "tidyHtml" : null,

        /* Allow import of file types other than the supported types: txt, doc, docx, rtf, odt, html & htm */
        "allowUnknownFileEnds" : true,

        /* This setting is used if you require authentication of all users.
           Note: /admin always requires authentication. */
        "requireAuthentication" : false,

        /* Require authorization by a module, or a user with is_admin set, see below. */
        "requireAuthorization" : false,

        /*when you use NginX or another proxy/ load-balancer set this to true*/
        "trustProxy" : false,

        /* Privacy: disable IP logging */
        "disableIPlogging" : false,

        /* Users for basic authentication. is_admin = true gives access to /admin.
           If you do not uncomment this, /admin will not be available! */

        "users": {
          "admin": {
            "password": "${ADMIN_PASSWORD}",
            "is_admin": true
          }
        },

        // restrict socket.io transport methods
        "socketTransportProtocols" : ["xhr-polling", "jsonp-polling", "htmlfile"],

        // Allow Load Testing tools to hit the Etherpad Instance.  Warning this will disable security on the instance.
        "loadTest": false,

        /* The toolbar buttons configuration.
        "toolbar": {
          "left": [
            ["bold", "italic", "underline", "strikethrough"],
            ["orderedlist", "unorderedlist", "indent", "outdent"],
            ["undo", "redo"],
            ["clearauthorship"]
          ],
          "right": [
            ["importexport", "timeslider", "savedrevision"],
            ["settings", "embed"],
            ["showusers"]
          ],
          "timeslider": [
            ["timeslider_export", "timeslider_returnToPad"]
          ]
        },
        */

        /* The log level we are using, can be: DEBUG, INFO, WARN, ERROR */
        "loglevel": "INFO",

        //Logging configuration. See log4js documentation for further information
        // https://github.com/nomiddlename/log4js-node
        // You can add as many appenders as you want here:
        "logconfig" :
          { "appenders": [
              { "type": "console"
              //, "category": "access"// only logs pad access
              }
          /*
            , { "type": "file"
            , "filename": "your-log-file-here.log"
            , "maxLogSize": 1024
            , "backups": 3 // how many log files there're gonna be at max
            //, "category": "test" // only log a specific category
              }*/
          /*
            , { "type": "logLevelFilter"
              , "level": "warn" // filters out all log messages that have a lower level than "error"
              , "appender":
                {  Use whatever appender you want here  }
              }*/
          /*
            , { "type": "logLevelFilter"
              , "level": "error" // filters out all log messages that have a lower level than "error"
              , "appender":
                { "type": "smtp"
                , "subject": "An error occured in your EPL instance!"
                , "recipients": "bar@blurdybloop.com, baz@blurdybloop.com"
                , "sendInterval": 60*5 // in secs -- will buffer log messages; set to 0 to send a mail for every message
                , "transport": "SMTP", "SMTP": { // see https://github.com/andris9/Nodemailer#possible-transport-methods
                    "host": "smtp.example.com", "port": 465,
                    "secureConnection": true,
                    "auth": {
                        "user": "foo@example.com",
                        "pass": "bar_foo"
                    }
                  }
                }
              }*/
            ]
          }
      }
